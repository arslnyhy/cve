@medium(
    name='rule_cve_2024_20315',
    platform=['cisco_iosxr'],
    commands=dict(
        show_mpls_interfaces='show mpls interfaces',
        show_running_config='show running-config'
    ),
)
def rule_cve_2024_20315(configuration, commands, device, devices):
    """
    This rule checks for the presence of ingress ACLs on MPLS interfaces
    which are vulnerable to CVE-2024-20315. The vulnerability allows
    unauthenticated, remote attackers to bypass configured ACLs due to
    improper assignment of lookup keys to internal interface contexts.
    """

    # Extract the output of the 'show mpls interfaces' command
    mpls_interfaces_output = commands.show_mpls_interfaces

    # Find all MPLS interfaces that are enabled
    enabled_mpls_interfaces = []
    for line in mpls_interfaces_output.splitlines():
        if 'Yes' in line:
            # Assuming the interface name is the first column
            interface_name = line.split()[0]
            enabled_mpls_interfaces.append(interface_name)

    # Check each enabled MPLS interface for ingress ACLs
    for interface in enabled_mpls_interfaces:
        # Use the 'show running-config interface' command to get the config for each interface
        interface_config_command = f'show running-config interface {interface}'
        interface_config_output = device.cli(interface_config_command)

        # Check if there is an ingress ACL applied
        if 'access-group' in interface_config_output and 'ingress' in interface_config_output:
            # If an ingress ACL is found, the device is vulnerable
            assert False, f"Ingress ACL found on MPLS interface {interface}, which is vulnerable to CVE-2024-20315."

    # If no ingress ACLs are found on MPLS interfaces, the test passes
    assert True
